// api/process.js
const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  const apiKey = process.env.MISTRAL_API_KEY; // Use environment variables for security
  const prompt = "You are an executive search headhunter at Korn Ferry tasked with making a write-up of [75; 150] words about a candidate based on the data in the files attached.";

  try {
    // NOTE: Vercel Serverless Functions have a 4.5MB payload limit for free tier.
    // For larger files, use a different approach (e.g., upload to S3 first).
    const files = req.body.files;
    if (!files || !files.length) {
      return res.status(400).json({ error: 'No files uploaded' });
    }

    const formData = new FormData();
    files.forEach((file, i) => {
      formData.append(`file${i}`, file.content, file.name);
    });

    const response = await axios.post(
      'https://api.mistral.ai/v1/chat/completions',
      {
        model: 'mistral-tiny',
        messages: [{ role: 'user', content: prompt }],
        // Add file handling logic here if Mistral supports direct file uploads.
        // If not, extract text from files before sending.
      },
      {
        headers: {
          'Authorization': `Bearer ${apiKey}`,
          'Content-Type': 'application/json',
        },
      }
    );

    res.status(200).json({ result: response.data.choices[0].message.content });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: error.message });
  }
}
